<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<actionScriptProperties 
        mainApplicationPath="$mainApplication"
#if($projectUUID)
		projectUUID="$projectUUID"
#end
        version="10"
        >

    <compiler
            additionalCompilerArguments="$!additionalCompilerArguments"
            autoRSLOrdering="true"
            copyDependentFiles="true"
            fteInMXComponents="false" 
            generateAccessible="$accessible" 
            htmlExpressInstall="$htmlExpressInstall" 
            htmlGenerate="$htmlGenerate" 
            htmlHistoryManagement="$htmlHistoryManagement"
            htmlPlayerVersionCheck="$htmlPlayerVersionCheck"
			includeNetmonSwc="false"
            outputFolderPath="$ideOutputFolderPath" 
            removeUnusedRSL="true"
            sourceFolderPath="$mainSources" 
            strict="$strict"
#if($useApolloConfig)
			targetPlayerVersion="0.0.0"
#else
			targetPlayerVersion="$targetPlayer"
#end
            useApolloConfig="$useApolloConfig"
            useDebugRSLSwfs="true"
            verifyDigests="$verifyDigests" 
            warn="$showWarnings"
            >

        <compilerSourcePath>
#foreach ($path in $sources)
            <compilerSourcePathEntry 
                    kind="1" 
                    linkType="1" 
                    path="$path"
                    />
#end 
        </compilerSourcePath>

        <libraryPath
                defaultLinkType="$libraryPathDefaultLinkType">
			
#foreach ($artifact in $dependencies)
			<!-- artifact: $artifact -->
            <libraryPathEntry
#if($artifact.getScope() == "rsl")
					autoExtract="true"
					rslUrl="$artifact.getRslUrl('swf')"
#end 
                    kind="$artifact.getKindId()" 
                    linkType="$artifact.getLinkTypeId()" 
                    path="$artifact.getPath()"
#if($artifact.getSourcePath())
                    sourcepath="$artifact.getSourcePath()"
#end
#if ($artifact.getKindId() != 5)
                    useDefaultLinkType="false"
#end
                    />

#end
			<libraryPathEntry kind="4" path="">
				<modifiedEntries>
#foreach ($modified in $sdkMods)
#if ($modified.getLinkTypeId() == 4)
					<libraryPathEntry
						kind="3"
						linkType="$modified.getLinkTypeId()"
						path="$modified.getPath()"
						useDefaultLinkType="false">
						<crossDomainRsls>
							<crossDomainRslEntry autoExtract="true" policyFileUrl="$modified.getPolicyFileUrl()" rslUrl="$modified.getRslUrl('swz')" />
							<crossDomainRslEntry autoExtract="true" policyFileUrl="$modified.getPolicyFileUrl()" rslUrl="$modified.getRslUrl('swf')" />
						</crossDomainRsls>
					</libraryPathEntry>
#else
					<libraryPathEntry
						kind="3"
						linkType="$modified.getLinkTypeId()"
						path="$modified.getPath()"
#if ($modified.getLinkTypeId() == 3)
						autoExtract="true"
						rslUrl="$modified.getRslUrl('swf')"
#end
						useDefaultLinkType="false" />
#end
#end
				</modifiedEntries>
				<excludedEntries>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/flex.swc" useDefaultLinkType="false"/>
#if( $mobileProject )					
					<libraryPathEntry kind="1" linkType="1" path="${PROJECT_FRAMEWORKS}/locale/{locale}"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/advancedgrids.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/automation_air.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/charts.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/netmon.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/spark.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/sparkskins.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/rpc.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/qtp_air.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/videoPlayer.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/flash-integration.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/authoringsupport.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/qtp.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/framework.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/air/airspark.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/mx/mx.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/air/applicationupdater.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/utilities.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/datavisualization.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/spark_dmv.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/automation.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/automation_dmv.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/automation_flashflexkit.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/air/applicationupdater_ui.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/air/airframework.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/mobile/mobilecomponents.swc" useDefaultLinkType="false"/>
					<libraryPathEntry kind="3" linkType="1" path="${PROJECT_FRAMEWORKS}/libs/automation_agent.swc" useDefaultLinkType="false"/>
#end					
#foreach ($exclude in $sdkExcludes)
					<libraryPathEntry kind="3" linkType="1" path="$exclude.getPath()" useDefaultLinkType="false" />
#end
				</excludedEntries>
			</libraryPathEntry>
		</libraryPath>


        <sourceAttachmentPath>
#foreach ($artifact in $dependencies)
#if ($artifact.getSourcePath())
            <sourceAttachmentPathEntry
                kind="3"
                linkType="$artifact.getLinkType()"
                path="$artifact.getPath()"
                sourcepath="$artifact.getSourcePath()"
                useDefaultLinkType="false" />
#end 
#end        
        </sourceAttachmentPath>

    </compiler>

    <applications>
#foreach ($application in $applications)
        <application 
                path="$application"
                />
#end
    </applications>

    <modules>
#foreach($module in $moduleFiles)
		<module application="$mainSources/$mainApplication" 
			destPath="$module.replace('mxml', 'swf')" 
			optimize="true" 
			sourcePath="$mainSources/$module"/>
#end
    </modules>
    
    <buildCSSFiles>
#foreach( $cssfile in $cssfiles )
		<buildCSSFileEntry destPath="$ideOutputFolderPath" sourcePath="$cssfile" />
#end
    </buildCSSFiles>
    
  <flashCatalyst validateFlashCatalystCompatibility="false"/>
  
#if ( $mobileProject )
  
  <buildTargets>
    <buildTarget airDownloadURL="" androidSettingsVersion="1" buildTargetName="com.adobe.flexide.multiplatform.android.platform">
#if ($hasANE)
    <airSettings airCertificatePath="" airTimestamp="true" anePathSet="true" version="1">
        <airExcludes/>
        <anePaths>
#foreach ($artifact in $dependencies)
	#if ($artifact.getKindId() == 5)
            <anePathEntry path="$artifact.getPath()"/>
	#end
#end
</anePaths>
#else	
      <airSettings airCertificatePath="" airTimestamp="true" anePathSet="false" version="1">
        <airExcludes/>
        <anePaths/>
#end
      </airSettings>
      <multiPlatformSettings enabled="true" includePlatformLibs="false" platformID="com.adobe.flexide.multiplatform.android.platform" version="2"/>
      <actionScriptSettings version="1"/>
    </buildTarget>
    <buildTarget buildTargetName="default">
      <airSettings airCertificatePath="" airTimestamp="true" anePathSet="false" version="1">
        <airExcludes/>
        <anePaths/>
      </airSettings>
      <multiPlatformSettings enabled="false" includePlatformLibs="false" platformID="default" version="2"/>
      <actionScriptSettings version="1"/>
    </buildTarget>
	<buildTarget buildTargetName="com.adobe.flexide.multiplatform.ios.platform" iosSettingsVersion="1" provisioningFile="" releasePackageType="">
      <multiPlatformSettings enabled="false" includePlatformLibs="false" platformID="com.adobe.flexide.multiplatform.ios.platform" version="2"/>
      <airSettings airCertificatePath="" airTimestamp="true" anePathSet="true" version="1">
        <airExcludes/>
        <anePaths/>
      </airSettings>
      <actionScriptSettings version="1"/>
    </buildTarget>
  </buildTargets>

#end

</actionScriptProperties>
